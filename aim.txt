The scalability property in the context of Network-on-Chip (NoC) refers to how well the network can grow in terms of size while maintaining acceptable performance, power, and area overheads. Establishing this property involves examining how increasing the number of processing elements (PEs), cores, or routers in an NoC affects the network's performance and behavior. Below are key aspects to consider when evaluating scalability in an NoC system:

1. Latency vs. NoC Size
As the number of nodes or routers in the NoC increases, the average communication latency typically grows. This happens because packets may need to traverse more hops to reach their destination.
Scalability is established by analyzing whether this increase in latency remains within acceptable bounds as the network size increases.
Metrics to analyze:
Average packet latency
Worst-case latency
Latency should ideally grow sub-linearly or linearly with increasing NoC size for good scalability.
2. Throughput vs. NoC Size
Throughput represents the number of packets successfully delivered per unit time. As the network scales, the available bandwidth per router might become a limiting factor.
A scalable NoC should be able to maintain or improve overall throughput even as the number of nodes increases.
Metrics to analyze:
Network throughput
Bottlenecks in communication paths
Injection and acceptance rates at each node
If the throughput scales linearly with the network size, the NoC is considered highly scalable.

3. Power Consumption vs. NoC Size
As the NoC size increases, the power consumption may rise due to increased switching activity, buffer usage, and longer wires.
Power scalability refers to how efficiently the network handles the growth in the number of cores or routers without a drastic rise in power consumption.
Metrics to analyze:
Dynamic power (related to data transmission)
Static power (leakage due to increased wiring and components)
Ideally, power consumption should scale sub-linearly with the NoC size for good scalability.
4. Area Overhead vs. NoC Size
Increasing the size of the NoC can result in a larger silicon footprint because of additional routers, links, and buffers. However, a scalable NoC architecture should optimize the area overhead as it grows.
Metrics to analyze:
Router complexity
Buffer area
Link length and wire area
A well-scaled NoC should aim for minimal increases in area overhead with size growth, for example, by using shared resources or simpler router designs.
5. Routing Algorithm Scalability
The routing algorithm must be efficient in handling an increased number of nodes. Some algorithms that work well for small NoC sizes may degrade in performance when applied to larger networks.
Metrics to analyze:
Load balance across the network
Path diversity (ability to avoid congested areas)
Fault tolerance
A scalable routing algorithm should adapt to the size of the network and ensure low congestion, low latency, and high fault tolerance as the NoC scales.
6. Network Topology
Topology plays a critical role in scalability. Different topologies such as mesh, torus, fat-tree, and butterfly offer varying degrees of scalability.
Metrics to analyze:
Maximum path length
Network diameter (longest distance between two nodes)
Average hop count
A topology is scalable if it allows for efficient communication as the network size increases, with minimal impact on performance.
7. Congestion and Contention
As the NoC size increases, contention for shared resources (e.g., buffers or links) can lead to congestion. This can degrade performance significantly if not handled properly.
Metrics to analyze:
Congestion hotspots
Queue length at routers
Buffer utilization
A scalable NoC design should minimize congestion by balancing the load across the network.
8. Fault Tolerance
As NoC size increases, the likelihood of faults (e.g., link or router failures) also increases. A scalable NoC should incorporate mechanisms for fault detection and recovery that work efficiently for larger network sizes.
Metrics to analyze:
Mean time between failures (MTBF)
Recovery time after faults
Fault tolerance should scale with the NoC size to ensure reliability in larger systems.
Summary of Scalability Metrics:
Latency: How does latency grow as the network size increases?
Throughput: Can the network maintain or improve throughput as it scales?
Power consumption: Is power consumption scaling efficiently with the NoC size?
Area overhead: Does the area required for routers and links grow reasonably?
Routing algorithm efficiency: Does the routing algorithm balance the load and minimize congestion in large networks?
Network topology: Does the chosen topology allow for efficient communication in large networks?
Congestion and contention: Are congestion hotspots avoided as the network grows?
Fault tolerance: Can the network handle faults effectively as its size increases?
By evaluating these metrics, NoC designers can establish the scalability property of a network as its size grows.
